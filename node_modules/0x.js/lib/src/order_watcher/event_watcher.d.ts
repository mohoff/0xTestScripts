import { BlockParamLiteral } from '@0xproject/types';
import { Web3Wrapper } from '@0xproject/web3-wrapper';
import { EventWatcherCallback } from '../types';
/**
 * The EventWatcher watches for blockchain events at the specified block confirmation
 * depth.
 */
export declare class EventWatcher {
    private _web3Wrapper;
    private _pollingIntervalMs;
    private _intervalIdIfExists?;
    private _lastEvents;
    private _stateLayer;
    constructor(web3Wrapper: Web3Wrapper, pollingIntervalIfExistsMs: undefined | number, stateLayer?: BlockParamLiteral);
    subscribe(callback: EventWatcherCallback): void;
    unsubscribe(): void;
    private _pollForBlockchainEventsAsync(callback);
    private _getEventsAsync();
    private _emitDifferencesAsync(logs, logEventState, callback);
}
