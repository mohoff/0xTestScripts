import { SignedOrder } from '@0xproject/types';
import { BalanceAndProxyAllowanceFetcher } from '../abstract/balance_and_proxy_allowance_fetcher';
import { OrderFilledCancelledFetcher } from '../abstract/order_filled_cancelled_fetcher';
import { OrderRelevantState, OrderState } from '../types';
export declare class OrderStateUtils {
    private _balanceAndProxyAllowanceFetcher;
    private _orderFilledCancelledFetcher;
    private static _validateIfOrderIsValid(signedOrder, orderRelevantState);
    constructor(balanceAndProxyAllowanceFetcher: BalanceAndProxyAllowanceFetcher, orderFilledCancelledFetcher: OrderFilledCancelledFetcher);
    getOrderStateAsync(signedOrder: SignedOrder): Promise<OrderState>;
    getOrderRelevantStateAsync(signedOrder: SignedOrder): Promise<OrderRelevantState>;
}
